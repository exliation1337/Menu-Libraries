local Library = {}

function Library:Load(Parameters)

    -- Parameters
    local Theme = Parameters.Theme
    local Tabs = Parameters.Tabs
    local Size = Parameters.Size

    local CheatName = Parameters.Name
    local CheatGame = Parameters.Game
    local CheatUser = Parameters.User

    
    -- Variables 1
    local Game = game
    local Enum = Enum
    local IsFolder = isfolder
    local MakeFolder = makefolder
    local ListFiles = listfiles
    local WriteFile = writefile
    local SetMetaTable = setmetatable
    local GetCustomAsset = getcustomasset


    -- Variables 2
    local NewInstance = Instance.new
    local NewVector2 = Vector2.new
    local NewUDim2 = UDim2.new
    local NewUDim = UDim.new
    local NewFont = Font.new
    local NewRGB = Color3.fromRGB
    local ToHSV = Color3.toHSV

    -- Functions 1
    local Traceback = debug.traceback
    local Remove = table.remove
    local Concat = table.concat
    local Clear = table.clear
    local Find = table.find
    local Round = math.round
    local Clamp = math.clamp
    local Format = string.format
    local Match = string.match
    local Gsub = string.gsub
    local Spawn = task.spawn
    local Cancel = task.cancel
    local Wait = task.wait


    -- Functions 2
    local GetPropertyChangedSignal = Game.GetPropertyChangedSignal
    local GetService = Game.GetService
    local Destroy = Game.Destroy


    -- Services
    local UserInputService = GetService(Game, "UserInputService")
    local HttpService = GetService(Game, "HttpService")
    local RunService = GetService(Game, "RunService")
    local Workspace = GetService(Game, "Workspace")
    local Players = GetService(Game, "Players")
    local CoreGui = GetService(Game, "CoreGui")

    local RenderStepped = RunService.RenderStepped

    local CurrentCamera = Workspace.CurrentCamera
    local Screen = CurrentCamera.ViewportSize

    local LocalPlayer = Players.LocalPlayer
    local Mouse = LocalPlayer:GetMouse()


    -- Tables
    local Menu = {
        InputBegan = {},
        InputEnded = {},
        InputChanged = {},

        CurrentContent = nil,
        CurrentTab = nil,

        Elements = {}, -- Stores Menu.Elements[Parameters.Tab][Section.Name][Name] = Toggle
        Tabs = {},

        IsOpen = false
    } Menu.__index = Menu

    local Draw = {}
    local Font = {}



    local InputTypes, InputShorts, KeyCodes = 
    { "MouseButton1", "MouseButton2", "MouseButton3" },
    {
        MouseButton1 = "MB1", MouseButton2 = "MB2", MouseButton3 = "MB3",
        LeftAlt = "LALT", LeftControl = "LC", LeftShift = "LS",
        RightAlt = "RALT", RightControl = "RC", RightShift = "RS",
        Insert = "INS", CapsLock = "CAPS", Delete = "DEL"
    },
    {
        "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L",
        "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",

        "Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine",

        "F1", "F2", "F3", "F4", "F5", "F6", "F7", "F8", "F9", "F10", "F11", "F12",

        "Delete", "End", "Home", "Insert", "Tab",

        "CapsLock", "LeftAlt", "LeftControl", "LeftShift",
        "RightAlt", "RightControl", "RightShift"
    }



    -- File & Folder Setup
    do
		if not IsFolder(CheatName) then
			MakeFolder(CheatName)
		end

		if not IsFolder(CheatName .. "/" .. CheatGame) then
			MakeFolder(CheatName .. "/" .. CheatGame)
		end

		if not IsFolder(CheatName .. "/" .. CheatGame .. "/configurations") then
			MakeFolder(CheatName .. "/" .. CheatGame .. "/configurations")
		end

		if not IsFolder(CheatName .. "/" .. CheatGame .. "/scripts") then
			MakeFolder(CheatName .. "/" .. CheatGame .. "/scripts")
		end
	end


    -- Encoded Assets
    do
        Menu.EncodedAssets = {
            ["Proggy Clean"] = "",
            ["Slider Gradient"] = "iVBORw0KGgoAAAANSUhEUgAAAAYAAAAGCAYAAADgzO9IAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3YXJlAFBhaW50Lk5FVCA1LjEuN4vW9zkAAAC2ZVhJZklJKgAIAAAABQAaAQUAAQAAAEoAAAAbAQUAAQAAAFIAAAAoAQMAAQAAAAIAAAAxAQIAEAAAAFoAAABphwQAAQAAAGoAAAAAAAAAYAAAAAEAAABgAAAAAQAAAFBhaW50Lk5FVCA1LjEuNwADAACQBwAEAAAAMDIzMAGgAwABAAAAAQAAAAWgBAABAAAAlAAAAAAAAAACAAEAAgAEAAAAUjk4AAIABwAEAAAAMDEwMAAAAAAlR56NozS1xQAAACxJREFUGFdjwAUYgZgLwkQFIAkRCBMVgCTkIExUAJLQgDBRAUjCCMJEBgwMACHjAJzSi0PfAAAAAElFTkSuQmCC"
        }
    end


	-- Font & Assets
	do
        WriteFile("Proggy Clean.ttf", base64.decode(Menu.EncodedAssets["Proggy Clean"]))
        WriteFile("Slider Gradient.png", base64.decode(Menu.EncodedAssets["Slider Gradient"]))
		WriteFile("Proggy Clean.font", HttpService:JSONEncode({
            name = "Proggy Clean",
            faces = {{
                name = "Regular",
                weight = 400,
                style = "normal",
                assetId = GetCustomAsset("Proggy Clean.ttf")
            }}
        }))

		Font = {
			[1] = NewFont(GetCustomAsset("Proggy Clean.font"), Enum.FontWeight.Regular, Enum.FontStyle.Normal),
			[2] = 12,
			[3] = NewRGB(255, 255, 255)
		}
	end


    -- Draw Library
	do
		function Draw:ScreenGui(Properties)
			assert(Properties, "No properties for [ScreenGui] - " .. Traceback())

			local Render = NewInstance("ScreenGui")
			Render.ZIndexBehavior = Enum.ZIndexBehavior.Global
			Render.IgnoreGuiInset = true
			Render.DisplayOrder = 10

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end
		
		function Draw:Frame(Properties)
			assert(Properties, "No properties for [Frame] - " .. Traceback())

			local Render = NewInstance("Frame")
			Render.BorderSizePixel = 1
			Render.BackgroundTransparency = 0
			Render.BackgroundColor3 = NewRGB(0, 0, 0)
			Render.BorderColor3 = NewRGB(0, 0, 0)
			Render.ZIndex = 1
			Render.Visible = true

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end
		
		function Draw:ScrollingFrame(Properties)
			assert(Properties, "No properties for [ScrollingFrame] - " .. Traceback())

			local Render = NewInstance("ScrollingFrame")
			Render.BorderSizePixel = 1
			Render.BackgroundTransparency = 0
			Render.BorderColor3 = NewRGB(0, 0, 0)
			Render.BackgroundColor3 = NewRGB(0, 0, 0)
			Render.ZIndex = 1
			Render.Visible = true
			
			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end
		
		function Draw:ImageLabel(Properties)
			assert(Properties, "No properties for [ImageLabel] - " .. Traceback())

			local Render = NewInstance("ImageLabel")
			Render.BorderSizePixel = 1
			Render.BackgroundTransparency = 0
			Render.BackgroundColor3 = NewRGB(255, 255, 255)
			Render.ImageColor3 = NewRGB(255, 255, 255)
			Render.BorderColor3 = NewRGB(0, 0, 0)
			Render.ResampleMode = "Pixelated"
			Render.ZIndex = 1
			Render.Visible = true
			
			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end
		
		function Draw:ImageButton(Properties)
			assert(Properties, "No properties for [ImageButton] - " .. Traceback())

			local Render = NewInstance("ImageButton")
			Render.BorderSizePixel = 1
			Render.BackgroundTransparency = 0
			Render.BackgroundColor3 = NewRGB(255, 255, 255)
			Render.ImageColor3 = NewRGB(255, 255, 255)
			Render.BorderColor3 = NewRGB(0, 0, 0)
			Render.ResampleMode = "Pixelated"
			Render.AutoButtonColor = false
			Render.ZIndex = 1
			Render.Visible = true
			
			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end
		
		function Draw:TextLabel(Properties)
			assert(Properties, "No properties for [TextLabel] - " .. Traceback())

			local Render = NewInstance("TextLabel")
			Render.BackgroundTransparency = 1
			Render.TextStrokeTransparency = 1
			Render.TextTransparency = 0
			Render.BorderSizePixel = 0
			Render.Text = "TextLabel"
			Render.TextStrokeColor3 = NewRGB(0, 0, 0)
			Render.FontFace = Font[1]
			Render.TextSize = Font[2]
            Render.TextColor3 = Font[3]
			Render.ZIndex = 1
			Render.Visible = true
			
			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end

        function Draw:TextButton(Properties)
            assert(Properties, "No properties for [TextButton] - " .. Traceback())

            local Render = NewInstance("TextButton")
            Render.BorderSizePixel = 1
            Render.BackgroundTransparency = 0
            Render.TextStrokeTransparency = 1
            Render.BorderColor3 = NewRGB(0, 0, 0)
            Render.BackgroundColor3 = NewRGB(50, 50, 50)
            Render.TextStrokeColor3 = NewRGB(0, 0, 0)
            Render.FontFace = Font[1]
            Render.TextSize = Font[2]
            Render.TextColor3 = Font[3]
            Render.AutoButtonColor = false
            Render.RichText = true
            Render.ZIndex = 1
            Render.Visible = true

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
        end

        function Draw:Textbox(Properties)
            assert(Properties, "No properties for [Textbox] - " .. Traceback())

            local Render = NewInstance("TextBox")
            Render.BorderSizePixel = 1
            Render.BackgroundTransparency = 1
            Render.TextStrokeTransparency = 1
            Render.PlaceholderText = "Placeholder"
            Render.BorderColor3 = NewRGB(0, 0, 0)
            Render.BackgroundColor3 = NewRGB(0, 0, 0)
            Render.TextStrokeColor3 = NewRGB(0, 0, 0)
            Render.FontFace = Font[1]
            Render.TextSize = Font[2]
            Render.TextColor3 = Font[3]
            Render.ClearTextOnFocus = false
            Render.ZIndex = 1
            Render.Visible = true

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
        end
		
		function Draw:UIListLayout(Properties)
			assert(Properties, "No properties for [UIListLayout] - " .. Traceback())

			local Render = NewInstance("UIListLayout")
			Render.ItemLineAlignment = "Start"
            Render.FillDirection = "Vertical"
			Render.VerticalFlex = "Fill"
			Render.Padding = NewUDim(0, 0)
			Render.Wraps = false

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
		end

        function Draw:UIStroke(Properties)
			assert(Properties, "No properties for [UIStroke] - " .. Traceback())

            local Render = NewInstance("UIStroke")
            Render.ApplyStrokeMode = Enum.ApplyStrokeMode.Contextual
            Render.LineJoinMode = Enum.LineJoinMode.Miter
            Render.Color = NewRGB(0, 0, 0)
            Render.Transparency = 0
            Render.Thickness = 1
            Render.Enabled = true

			for Index, Value in next, Properties do
				Render[Index] = Value
			end

			return Render
        end
	end


    -- Menu Setup (Overlay, Functions, etc)
    do
        Menu.Overlay = Draw:ScreenGui({
			Parent = CoreGui,
            Name = "\n \n \n \n",
			Enabled = true
		})
		
		Menu.TextBoundsLabel = Draw:TextLabel({
			Parent = Menu.Overlay,
			TextTransparency = 1,
			TextStrokeTransparency = 1,
			RichText = true,
			Visible = true
		})


        function Menu:GetTextBounds(Text)
			local TextLabel = Menu.TextBoundsLabel
			local Changed = false
			
			TextLabel.Text = Text
			
			GetPropertyChangedSignal(TextLabel, "TextBounds"):Once(function()
				Changed = true
			end)

			repeat Wait(0.05)
			until Changed

			return TextLabel.TextBounds
		end
    end


    -- Menu (Render, Main Functions)
    do
        local ZIndex = 1 -- Starting ZIndex


        -- Window
        do

            -- Rendering & Assignments
            do
                local Outline = Draw:Frame({
                    Parent = Menu.Overlay,
                    AnchorPoint = NewVector2(0.5, 0.5),
                    Position = NewUDim2(0.5, 0, 0.5, 0),
                    Size = Size - NewUDim2(0, 2, 0, 2),
                    Active = true,
                    Draggable = true,
                    BackgroundColor3 = Theme.A,
                    BorderSizePixel = 0,
                    BackgroundTransparency = 0.25,
                    ZIndex = ZIndex,
                    Visible = Menu.IsOpen
                }) ZIndex = ZIndex + 1
                
                Draw:UIStroke({
                    Parent = Outline,
                    Color = Theme.A
                })

                local OuterFramework = Draw:Frame({
                    Parent = Outline,
                    Position = NewUDim2(0, 4, 0, 4),
                    Size = NewUDim2(1, -8, 1, -8),
                    BackgroundTransparency = 1,
                    ZIndex = ZIndex,
                    Visible = true
                }) ZIndex = ZIndex + 1

                Draw:UIStroke({
                    Parent = OuterFramework,
                    Color = Theme.B,
                    Transparency = 0,
                    Thickness = 4
                })

                local InnerFramework = Draw:Frame({
                    Parent = Outline,
                    Position = NewUDim2(0, 3, 0, 3),
                    Size = NewUDim2(1, -6, 1, -6),
                    BackgroundTransparency = 1,
                    ZIndex = ZIndex,
                    Visible = true
                }) ZIndex = ZIndex + 1

                Draw:UIStroke({
                    Parent = InnerFramework,
                    Color = Theme.C,
                    Transparency = 0,
                    Thickness = 2
                })

                local Layout = Draw:Frame({
                    Parent = Outline,
                    Position = NewUDim2(0, 24, 0, 4),
                    Size = NewUDim2(1, -48, 0, 28),
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    ZIndex = ZIndex,
                    Visible = true
                }) ZIndex = ZIndex + 1

                Draw:UIListLayout({
                    Parent = Layout,
                    FillDirection = "Horizontal",
                    HorizontalFlex = "SpaceBetween",
                    Padding = NewUDim(0, 0)
                })
                
                local Resizer = Draw:ImageButton({
                    Parent = Outline,
                    Position = NewUDim2(1, -6, 1, -6),
                    Size = NewUDim2(0, 6, 0, 6),
                    Image = "", -- TODO Maybe?
                    BackgroundTransparency = 1,
                    BorderSizePixel = 0,
                    ZIndex = ZIndex,
                    Visible = true
                })

                Menu.Window = Outline
                Menu.TabLayout = Layout
                Menu.Resizer = Resizer
            end

            -- Connections
            do
                local Outline = Menu.Window
                local Connection

                Menu.Resizer.MouseButton1Down:Connect(function()
                    local InitialMouse = NewVector2(Mouse.X, Mouse.Y)
                    
                    local Position  = Outline.Position
                    local PositionX = Position.X
                    local PositionY = Position.Y
                    local Size      = Outline.Size
                    
                    Connection = RenderStepped:Connect(function()
                        if not UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) then
                            Connection:Disconnect()
                            return
                        end
                        
                        local Delta = NewVector2(Mouse.X, Mouse.Y) - InitialMouse
                        local NewWidth = Clamp(Size.X.Offset + Delta.X, 0, Screen.X)
                        local NewHeight = Clamp(Size.Y.Offset + Delta.Y, 0, Screen.Y)
                        
                        Outline.Size = NewUDim2(0, NewWidth, 0, NewHeight)
                        Outline.Position = NewUDim2(PositionX.Scale, PositionX.Offset + (NewWidth - Size.X.Offset) / 2, PositionY.Scale, PositionY.Offset + (NewHeight - Size.Y.Offset) / 2)
                    end)
                end)
            end
        end


        -- Tabs
        do
            local TabsAmt = #Tabs

            for i = 1, TabsAmt do
                local Tab = {
                    Name = Tabs[i],

                    Offsets = {[1] = 0, [2] = 0},
                    Sections = {},
                    IsOpen = false,
                    
                    ZIndex = ZIndex
                }

                -- Rendering
                do
                    local Button = Draw:TextButton({
                        Parent = Menu.TabLayout,
                        Size = NewUDim2(1 / TabsAmt, -4, 1, 0),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Text = Tab.Name,
                        ZIndex = Tab.ZIndex,
                        Visible = true
                    }) Tab.ZIndex = Tab.ZIndex + 1

                    local Accent = Draw:Frame({
                        Parent = Button,
                        Position = NewUDim2(0, 0, 1, -4),
                        Size = NewUDim2(1, 0, 0, 2),
                        BackgroundColor3 = Theme.F,
                        BorderSizePixel = 0,
                        ZIndex = Tab.ZIndex,
                        Visible = true
                    })

                    local Shadow = Draw:Frame({
                        Parent = Accent,
                        Position = NewUDim2(0, 0, 0, 2),
                        Size = NewUDim2(1, 0, 1, 0),
                        BackgroundColor3 = Theme.G,
                        BorderSizePixel = 0,
                        ZIndex = Tab.ZIndex,
                        Visible = true
                    })

                    local ContentHolder = Draw:Frame({
                        Parent = Menu.Window,
                        Position = NewUDim2(0, 22, 0, 36),
                        Size = NewUDim2(1, -44, 1, -56),
                        BackgroundColor3 = Theme.E,
                        BorderColor3 = Theme.C,
                        BorderMode = Enum.BorderMode.Inset,
                        ZIndex = Tab.ZIndex,
                        Visible = Tab.IsOpen
                    }) Tab.ZIndex = Tab.ZIndex + 1

                    Draw:UIStroke({
                        Parent = ContentHolder,
                        Color = Theme.A
                    })

                    local LeftLayout = Draw:Frame({
                        Parent = ContentHolder,
                        Position = NewUDim2(0, 23, 0, 23),
                        Size = NewUDim2(0.5, -30, 1, -46),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        ZIndex = Tab.ZIndex,
                        Visible = true
                    })
                    
                    Draw:UIListLayout({
                        Parent = LeftLayout,
                        FillDirection = "Vertical",
                        VerticalFlex = "None",
                        Padding = NewUDim(0, 14)
                    })
                    
                    local RightLayout = Draw:Frame({
                        Parent = ContentHolder,
                        Position = NewUDim2(0.5, 7, 0, 23),
                        Size = NewUDim2(0.5, -30, 1, -46),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        ZIndex = Tab.ZIndex,
                        Visible = true
                    })
                    
                    Draw:UIListLayout({
                        Parent = RightLayout,
                        FillDirection = "Vertical",
                        VerticalFlex = "None",
                        Padding = NewUDim(0, 14)
                    })

                    Tab.Button = Button
                    Tab.Accent = Accent
                    Tab.Shadow = Shadow
                    Tab.ContentHolder = ContentHolder
                    Tab.Layouts = {[1] = LeftLayout, [2] = RightLayout}
                end


                -- Functions
                do
                    function Tab:Open()
                        if Menu.CurrentTab == Tab then
                            return
                        end
                        
                        if Menu.CurrentTab then
                            Menu.CurrentTab:Close()
                        end

                        Menu.CurrentTab = Tab

                        Tab.Accent.BackgroundColor3 = Theme.Accent
                        Tab.Shadow.BackgroundColor3 = Theme.Accent:Lerp(NewRGB(Clamp((Theme.Accent.R * 255) - 100, 0, 255), Clamp((Theme.Accent.G * 255) - 100, 0, 255), Clamp((Theme.Accent.B * 255) - 68, 0, 255)), 0.5)
                    
                        Tab.ContentHolder.Visible = true
                    end

                    function Tab:Close()
                        Menu.CurrentTab = nil
                        
                        Tab.Accent.BackgroundColor3 = Theme.F
                        Tab.Shadow.BackgroundColor3 = Theme.G

                        Tab.ContentHolder.Visible = false
                    end
                end

                Tab.Button.MouseButton1Down:Connect(Tab.Open)

                Menu.Tabs[Tab.Name] = Tab
                Menu.Elements[Tab.Name] = Tab
            end

            Menu.Tabs[Tabs[Parameters.OpenTab]]:Open()
        end
    end

    function Menu:Open()
        Menu.IsOpen = true
        Menu.Window.Visible = true
    end

    function Menu:Close()
        Menu.IsOpen = false
        Menu.Window.Visible = false
    end

    -- CreateSection(Parameters : Table)
    -- Tab:string                        == Name of the Tab you want to create a section in
    -- Length:integer                    == Length of the section you want to create
    -- Fill:boolean                      == If Fill is true, Length will be ignored and the section will fill the left space
    -- Side:int                          == Side of the section, {1, 2} (Right, Left)

    function Menu:CreateSection(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Name = Parameters.Name or "section"
        local Length = Parameters.Length or 250
        local Fill = Parameters.Fill or false
        local Side = Parameters.Side or 1

        local Section = {
            Offset = 10,

            Elements = {}, -- Stores elements (tables), indexed by names

            ZIndex = Tab.ZIndex
        }


        -- Rendering
        do
            local ContentHolder = Draw:Frame({-- TODO: Scrolling
                Parent = Tab.Layouts[Side],
                Position = NewUDim2(0, 0, 0, 0),
                Size = NewUDim2(1, 0, Fill and 1 or 0, Fill and -Tab.Offsets[Side] or Length),
                BackgroundColor3 = Theme.E,
                BorderColor3 = Theme.C,
                BorderMode = Enum.BorderMode.Inset,
                ZIndex = Section.ZIndex,
                Visible = true
            }) Section.ZIndex = Section.ZIndex + 1

            Draw:UIStroke({
                Parent = ContentHolder,
                Color = Theme.A
            })

            local Title = Draw:TextLabel({
                Parent = ContentHolder,
                Position = NewUDim2(0, 14, 0, -6),
                BackgroundColor3 = Theme.E,
                BackgroundTransparency = 0,
                Text = Name,
                ZIndex = Section.ZIndex,
                Visible = true
            }) Section.ZIndex = Section.ZIndex + 1

            Title.Size = NewUDim2(0, Menu:GetTextBounds(Name).X + 8, 0, 10)

            Section.ContentHolder = ContentHolder
        end

        Tab.Sections[Name] = Section
        Tab.Offsets[Side] = Tab.Offsets[Side] + Section.ContentHolder.AbsoluteSize.Y + 2 -- Use the actual section size + 2 pixels for stroke
        Menu.Elements[Parameters.Tab][Name] = Section

        return Section
    end

    -- CreateToggle(Parameters : Table)
    -- Tab:string                        == Name of the Tab you want to create a toggle in
    -- Section:string                    == Name of the section you want to create a toggle in
    -- Name:string                       == Name of the toggle you want to create
    -- Value:boolean                     == Default Value of the toggle you want to create, true/false
    -- Risky:boolean                     == Risky, controls the color of the title
    -- Callback:function                 == Callback, on checking the toggle, Callback will be ran: Callback(Value)

    function Menu:CreateToggle(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Name = Parameters.Name or "toggle"
        local Value = Parameters.Value or false
        local Risky = Parameters.Risky or false
        local Callback = Parameters.Callback or function() end

        local Toggle = {
            Name = Name,
            Value = Value,
            Callback = Callback,

            ZIndex = Section.ZIndex
        }


        -- Rendering
        do
            local ZIndex = Toggle.ZIndex

            local Framework = Draw:TextButton({
                Parent = Section.ContentHolder,
                Position = NewUDim2(0, 0, 0, Section.Offset - 1),
                Size = NewUDim2(1, 0, 0, 11),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = "",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Checkbox = Draw:Frame({
                Parent = Framework,
                Position = NewUDim2(0, 8, 0, 2),
                Size = NewUDim2(0, 8, 0, 8),
                BackgroundColor3 = Toggle.Value and Theme.Accent or Theme.F,
                BorderColor3 = Theme.D,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Title = Draw:TextLabel({
                Parent = Framework,
                Position = NewUDim2(0, 24, 0, 6),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = Name,
                TextColor3 = Risky and Theme.Risky or NewRGB(255, 255, 255),
                TextXAlignment = "Left",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1


            Toggle.Framework = Framework
            Toggle.Checkbox = Checkbox
            Toggle.Title = Title

            Toggle.ZIndex = ZIndex
        end


        -- Functions
        do
            function Toggle:CONFIG_SET(Value)
                Toggle:Set(Value)
            end

            function Toggle:CONFIG_GET()
                return Toggle.Value
            end

            function Toggle:Set(Value)
                Toggle.Value = Value
                Toggle.Checkbox.BackgroundColor3 = Toggle.Value and Theme.Accent or Theme.F
                Toggle.Callback(Value)
            end
        end


        Toggle.Framework.MouseButton1Down:Connect(function()
            Toggle.Value = not Toggle.Value
            Toggle.Checkbox.BackgroundColor3 = Toggle.Value and Theme.Accent or Theme.F
            Toggle.Callback(Value)
        end)


        Section.Offset = Section.Offset + 14
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Toggle

        return Toggle
    end

    function Menu:CreateSlider(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Name = Parameters.Name or "slider"
        local Min = Parameters.Min or 0
        local Max = Parameters.Max or 100
        local Value = Parameters.Value or 50
        local Suffix = Parameters.Suffix or ""
        local Custom = Parameters.Custom or nil
        local Decimals = Parameters.Decimals or 1
        local Callback = Parameters.Callback or function() end

        Value = Clamp(Value, Min, Max)
        Decimals = 1 / Decimals

        local Slider = {
            Min = Min,
            Max = Max,
            Name = Name,
            Value = Value,
            Suffix = Suffix,
            Decimals = Decimals,
            Callback = Callback,

            ZIndex = Section.ZIndex
        }


        -- Rendering
        do
            local ZIndex = Slider.ZIndex

            local Framework = Draw:Frame({
                Parent = Section.ContentHolder,
                Position = NewUDim2(0, 0, 0, Section.Offset),
                Size = NewUDim2(1, 0, 0, 30),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Outline = Draw:TextButton({
                Parent = Framework,
                Position = NewUDim2(0, 16, 0, 14),
                Size = NewUDim2(1, -32, 0, 6),
                BackgroundColor3 = Theme.B,
                BorderColor3 = Theme.D,
                Text = "",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Inline = Draw:ImageLabel({
                Parent = Outline,
                Position = NewUDim2(0, 0, 0, 0),
                Size = NewUDim2((Slider.Value - Slider.Min) / (Slider.Max - Slider.Min), 0, 1, 0),
                BackgroundColor3 = Theme.Accent,
                BorderSizePixel = 0,
                Image = getcustomasset("Slider Gradient.png"),
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Title = Draw:TextLabel({
                Parent = Framework,
                Position = NewUDim2(0, 16, 0, 5),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = Name,
                TextXAlignment = "Left",
                ZIndex = ZIndex,
                Visible = true
            })

            local TextValue = Draw:TextLabel({
                Parent = Inline,
                Position = NewUDim2(1, 0, 1, 6),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = Custom and Slider.Value == Custom[2] and Custom[1] or (Slider.Value .. Slider.Suffix),
                ZIndex = ZIndex,
                Visible = true
            })

            local Minus = Draw:TextButton({
                Parent = Outline,
                Position = NewUDim2(0, -9, 0, 0),
                Size = NewUDim2(0, 5, 0, 5),
                BackgroundTransparency = 1,
                Text = "-",
                ZIndex = ZIndex,
                Visible = true
            })
            
            local Plus = Draw:TextButton({
                Parent = Outline,
                Position = NewUDim2(1, 5, 0, 0),
                Size = NewUDim2(0, 5, 0, 5),
                BackgroundTransparency = 1,
                Text = "+",
                ZIndex = ZIndex,
                Visible = true
            })

            Slider.Plus = Plus
            Slider.Minus = Minus
            Slider.Inline = Inline
            Slider.Outline = Outline
            Slider.TextValue = TextValue
            Slider.Framework = Framework

            Slider.ZIndex = ZIndex
        end


        -- Functions
        do
            function Slider:CONFIG_SET(Value)
                Slider:Set(Value)
            end

            function Slider:CONFIG_GET()
                return Slider.Value
            end


            function Slider:Set(Value)
                local Decimals = Slider.Decimals
                Value = Clamp(Round(Value * Decimals) / Decimals, Slider.Min, Slider.Max)

                Slider.Value = Value
                Slider.Plus.Visible = Value < Slider.Max
                Slider.Minus.Visible = Value > Slider.Min
                Slider.Inline.Size = NewUDim2((Value - Slider.Min) / (Slider.Max - Slider.Min), 0, 1, 0)

                Slider.TextValue.Text = (Custom and Value == Custom[2]) and Custom[1] or (Value .. Slider.Suffix)
                Slider.Callback(Value)
            end

            function Slider:Refresh()
                local X = Slider.Outline.AbsoluteSize.X
                local Decimals, Min, Max = Slider.Decimals, Slider.Min, Slider.Max

                Slider:Set(Clamp(Round((Min + (Max - Min) * Clamp(Mouse.X - Slider.Inline.AbsolutePosition.X, 0, X) / X) * Decimals) / Decimals, Min, Max))
            end

            function Slider:Get()
                return Slider.Value
            end
        end


        -- Connections
        do
            local MoveConnection
            local ReleaseConnection
            Slider.Outline.MouseButton1Down:Connect(function()
                Slider:Refresh()
                
                MoveConnection = Mouse.Move:Connect(Slider.Refresh)
                ReleaseConnection = UserInputService.InputEnded:Connect(function(Input)
                    if Input.UserInputType == Enum.UserInputType.MouseButton1 then 
                        Slider:Refresh()

                        MoveConnection:Disconnect()
                        ReleaseConnection:Disconnect()
                        MoveConnection = nil
                        ReleaseConnection = nil
                    end
                end)
            end)

            Slider.Minus.MouseButton1Down:Connect(function()
                Slider:Set(Slider.Value - 1 / Slider.Decimals)
            end)

            Slider.Plus.MouseButton1Down:Connect(function()
                Slider:Set(Slider.Value + 1 / Slider.Decimals)
            end)
        end

        Section.Offset = Section.Offset + 36
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Slider

        return Slider
    end

    function Menu:CreateDropdown(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Name = Parameters.Name or "dropdown"
        local Values = Parameters.Values or {"option 1", "option 2", "option 3"}
        local Value = Parameters.Value or (typeof(Values) == "table" and {Values[1]} or Values[1])
        local Callback = Parameters.Callback or function() end
        local MultiChoice = typeof(Value) == "table"

        local Dropdown = {
            IsOpen = false,

            OpenFramework = nil, -- Framework on opening the dropdown
            OpenTexts = {}, -- Stores the texts on opening, used to switch the colors upon selecting/deselecting

            Value = Value,
            Values = Values,
            MultiChoice = MultiChoice,
            Callback = Callback,

            ZIndex = Section.ZIndex
        }

        -- Rendering
        do
            local ZIndex = Dropdown.ZIndex

            local Framework = Draw:Frame({
                Parent = Section.ContentHolder,
                Position = NewUDim2(0, 0, 0, Section.Offset),
                Size = NewUDim2(1, 0, 0, 31),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Inline = Draw:TextButton({
                Parent = Framework,
                Position = NewUDim2(0, 15, 0, 14),
                Size = NewUDim2(1, -30, 0, 16),
                BackgroundColor3 = Theme.C,
                BorderColor3 = Theme.D,
                Text = "",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local TextValue = Draw:TextLabel({
                Parent = Inline,
                Position = NewUDim2(0, 2, 0, 8),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = MultiChoice and Concat(Value, ", ") or Value,
                TextXAlignment = "Left",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Title = Draw:TextLabel({
                Parent = Framework,
                Position = NewUDim2(0, 16, 0, 5),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = Name,
                TextXAlignment = "Left",
                ZIndex = ZIndex,
                Visible = true
            })

            local Icon = Draw:TextLabel({
                Parent = Inline,
                Position = NewUDim2(1, -6, 0, 7),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                Text = "+",
                ZIndex = ZIndex,
                Visible = true
            })

            Dropdown.Icon = Icon
            Dropdown.Inline = Inline
            Dropdown.TextValue = TextValue

            Dropdown.ZIndex = ZIndex
        end

        
        -- Functions
        do
            function Dropdown:Open()
                if Menu.CurrentContent then
                    Menu.CurrentContent:Close()
                end

                Menu.CurrentContent = Dropdown
                Dropdown.IsOpen = true
                Dropdown.Icon.Text = "-"

                local ZIndex = Dropdown.ZIndex + 100
                local ValuesAmt = #Dropdown.Values

                local Framework = Draw:Frame({
                    Parent = Dropdown.Inline,
                    Position = NewUDim2(0, 0, 0, 19),
                    Size = NewUDim2(1, 0, 0, (20 * ValuesAmt)),
                    BackgroundColor3 = Theme.C,
                    BorderColor3 = Theme.D,
                    ZIndex = ZIndex,
                    Visible = true
                }) ZIndex = ZIndex + 1

                for i = 1, ValuesAmt do
                    local Value = Dropdown.Values[i]

                    local Button = Draw:TextButton({
                        Parent = Framework,
                        Position = NewUDim2(0, 0, 0, (20 * (i - 1))),
                        Size = NewUDim2(1, 0, 0, 20),
                        BackgroundTransparency = 1,
                        BorderSizePixel = 0,
                        Text = "",
                        ZIndex = ZIndex,
                        Visible = true
                    })

                    local Text = Draw:TextLabel({
                        Parent = Button,
                        Position = NewUDim2(0, 2, 0, 10),
                        TextColor3 = (MultiChoice and Find(Dropdown.Value, Value) and Theme.Accent) or (Dropdown.Value == Value and Theme.Accent) or NewRGB(255, 255, 255),
                        TextXAlignment = "Left",
                        Text = Value,
                        ZIndex = ZIndex,
                        Visible = true
                    })

                    Button.MouseButton1Down:Connect(function()
                        if MultiChoice then
                            local Found = Find(Dropdown.Value, Value)
                            local Options = #Dropdown.Value

                            if Found and Options > 1 then
                                Remove(Dropdown.Value, Found)
                            elseif not Found then
                                Dropdown.Value[Options + 1] = Value
                            end
                        else
                            Dropdown.Value = Value
                        end
            
                        for k = 1, ValuesAmt do
                            local OpenText = Dropdown.OpenTexts[k]
                            OpenText.TextColor3 = (MultiChoice and Find(Dropdown.Value, OpenText.Text) and Theme.Accent) or (Dropdown.Value == OpenText.Text and Theme.Accent) or NewRGB(255, 255, 255)
                        end

                        Dropdown.TextValue.Text = MultiChoice and Concat(Dropdown.Value, ", ") or Dropdown.Value
                        Dropdown.Callback(Dropdown.Value)
                    end)

                    Dropdown.OpenTexts[i] = Text
                end

                Dropdown.OpenFramework = Framework
            end

            function Dropdown:Close()
                if Dropdown.IsOpen then
                    Menu.CurrentContent = nil
                    Dropdown.IsOpen = false

                    Dropdown.Icon.Text = "+"

                    Dropdown.OpenTexts = {}
                    Destroy(Dropdown.OpenFramework)
                end
            end
        end


        Dropdown.Inline.MouseButton1Down:Connect(function()
            Dropdown[Dropdown.IsOpen and "Close" or "Open"](Dropdown)
        end)


        Section.Offset = Section.Offset + 38
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Dropdown

        return Dropdown
    end

    function Menu:CreateKeybind(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Element = Menu.Elements[Parameters.Tab][Parameters.Section][Parameters.Element]
        local Name = Parameters.Name or "keybind"
        local Key = Parameters.Key or "none"
        local Mode = Parameters.Mode or "toggle"
        local Value = Parameters.Value or false
        local Changed = Parameters.Changed or function() end
        local Callback = Parameters.Callback or function() end

        local Keybind = {
            IsOpen = false,
            IsSelecting = false,
            SelectingConnection = nil,

            OpenFramework = nil, -- Framework on opening the keybind (selection menu)
            OpenTexts = {}, -- Stores the texts on opening, used to switch the colors upon selecting/deselecting

            Key = nil, -- Sets at the end, using Keybind:SetKeyFromInput(Key)
            Mode = Mode,
            Value = (Mode == "always" or Mode == "off hold") or Value,

            Changed = Changed,
            Callback = Callback,

            ZIndex = Section.ZIndex
        }


        -- Rendering
        do
            local ZIndex = Keybind.ZIndex

            local Framework = Draw:TextButton({
                Parent = Element.Framework,
                Position = NewUDim2(1, -47, 0, -1),
                Size = NewUDim2(0, 38, 0, 14),
                BackgroundColor3 = Theme.C,
                BorderColor3 = Theme.A,
                Text = "none",
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            Keybind.Framework = Framework

            Keybind.ZIndex = ZIndex
        end


        -- Functions
        do
            function Keybind:SetKeyFromInput(Input)
                if not Input.EnumType then
                    return false
                end

                local InputName = Input.Name

                if InputName == "Backspace" or InputName == "Escape" then
                    Keybind.Key = nil
                    Keybind.Framework.Text = "none"

                    Keybind.Changed(Keybind.Key)
                    Keybind.Callback(Keybind.Active)
                    return true
                end

                if Find(KeyCodes, InputName) or Find(InputTypes, InputName) then
                    Keybind.Key = Input.EnumType[InputName]
                    Keybind.Framework.Text = InputShorts[InputName] or InputName

                    Keybind.Changed(Keybind.Key)
                    Keybind.Callback(Keybind.Active)
                    return true
                end

                return false
            end

            function Keybind:Open()
                if Menu.CurrentContent then
                    Menu.CurrentContent:Close()
                end

                Menu.CurrentContent = Keybind
                Keybind.IsOpen = true

                local Modes = {"always", "toggle", "on hold", "off hold"}
                local ModesAmt = #Modes

                local ZIndex = Keybind.ZIndex + 100
                local OpenFramework = Draw:Frame({
                    Parent = Keybind.Framework,
                    Position = NewUDim2(0, -Keybind.Framework.AbsoluteSize.X + 16, 1, 4),
                    Size = NewUDim2(0, 60, 0, ModesAmt * 16),
                    BackgroundColor3 = Theme.C,
                    BorderColor3 = Theme.A,
                    ZIndex = ZIndex,
                    Visible = true
                }) ZIndex = ZIndex + 1

                for i = 1, ModesAmt do
                    local Mode = Modes[i]

                    local ModeButton = Draw:TextButton({
                        Parent = OpenFramework,
                        Position = NewUDim2(0, 0, 0, (i - 1) * 16),
                        Size = NewUDim2(1, 0, 0, 16),
                        TextColor3 = Mode == Keybind.Mode and Theme.Accent or NewRGB(255, 255, 255),
                        BackgroundColor3 = Theme.C,
                        BorderSizePixel = 0,
                        Text = Mode,
                        ZIndex = ZIndex,
                        Visible = true
                    }) ZIndex = ZIndex + 1

                    ModeButton.MouseButton1Down:Connect(function() -- TODO: Maybe set mode function? will also have to set those colors if open
                        Keybind.Mode = Mode
                        ModeButton.TextColor3 = Theme.Accent
    
                        if Keybind.Mode == "always" or Keybind.Mode == "off hold" then
                            Keybind.Value = true
                            Keybind.Callback(Keybind.Value)
                        else
                            Keybind.Value = false
                            Keybind.Callback(Keybind.Value)
                        end

                        -- Reset others
                        for k = 1, ModesAmt do
                            local Button = Keybind.OpenTexts[k]

                            if Button == ModeButton then
                                continue
                            end

                            Button.TextColor3 = NewRGB(255, 255, 255)
                        end
                    end)

                    Keybind.OpenTexts[i] = ModeButton
                end

                Keybind.OpenFramework = OpenFramework
            end

            function Keybind:Close()
                if Keybind.IsOpen then
                    Menu.CurrentContent = nil
                    Keybind.IsOpen = false

                    Keybind.OpenTexts = {}
                    Destroy(Keybind.OpenFramework)
                end
            end
        end


        -- Connections
        do
            Keybind.Framework.MouseButton1Down:Connect(function()
                Keybind.IsSelecting = true
                Keybind.Framework.TextColor3 = Theme.Accent

                Wait()

                Keybind.SelectingConnection = UserInputService.InputBegan:Connect(function(Input)
                    local Selected = Keybind:SetKeyFromInput(Input.KeyCode.Name ~= "Unknown" and Input.KeyCode or Input.UserInputType)

                    if Selected then
                        Keybind.IsSelecting = false
                        Keybind.Framework.TextColor3 = NewRGB(255, 255, 255)

                        Keybind.SelectingConnection:Disconnect()
                        Keybind.SelectingConnection = nil
                    end
                end)
            end)

            Keybind.Framework.MouseButton2Down:Connect(function()
                Keybind[Keybind.IsOpen and "Close" or "Open"](Keybind)
            end)

            Menu.InputBegan[#Menu.InputBegan + 1] = function(Input)
                local Key, Mode = Keybind.Key, Keybind.Mode
                if not Keybind.IsSelecting and Key then
                    if Input.KeyCode == Key or Input.UserInputType == Key then
                        if Mode == "toggle" then
                            Keybind.Value = not Keybind.Value
                        elseif Mode == "on hold" then
                            Keybind.Value = true
                        elseif Mode == "off hold" then
                            Keybind.Value = false
                        else
                            return
                        end

                        Keybind.Callback(Keybind.Value)
                    end
                end
            end

            Menu.InputEnded[#Menu.InputEnded + 1] = function(Input)
                local Key, Mode = Keybind.Key, Keybind.Mode
                if not Keybind.IsSelecting and Key and (Input.KeyCode == Key or Input.UserInputType == Key) then
                    if Mode == "on hold" or Mode == "off hold" then
                        Keybind.Value = Mode == "off hold"
                        Keybind.Callback(Keybind.Value)
                    end
                end
            end
        end

        Keybind:SetKeyFromInput(Key)
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Keybind

        return Keybind
    end

    function Menu:CreateTextbox(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Name = Parameters.Name or "textbox"
        local Value = Parameters.Value or "vader haxx"
        local PlaceholderText = Parameters.Placeholder or "vader haxx!"
        local Callback = Parameters.Callback or function() end

        local Textbox = {
            OldValue = Value,
            Value = Value,
            Callback = Callback,

            ZIndex = Section.ZIndex
        }

        
        -- Rendering
        do
            local ZIndex = Textbox.ZIndex

            local Framework = Draw:Frame({
                Parent = Section.ContentHolder,
                Position = NewUDim2(0, 0, 0, Section.Offset),
                Size = NewUDim2(1, 0, 0, 20),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Frame = Draw:Frame({
                Parent = Framework,
                Position = NewUDim2(0, 15, 0, 1),
                Size = NewUDim2(1, -30, 1, -2),
                BackgroundColor3 = Theme.B,
                BorderColor3 = Theme.D,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            local Box = Draw:Textbox({
                Parent = Frame,
                Position = NewUDim2(0, 4, 0, 0),
                Size = NewUDim2(1, -4, 1, 0), 
                BackgroundTransparency = 1,
                --BackgroundColor3 = Theme.B,
                --BorderColor3 = Theme.D,
                Text = Textbox.Value,
                TextXAlignment = "Left",
                PlaceholderText = PlaceholderText,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1
        
            Textbox.Box = Box
            Textbox.Framework = Framework

            Textbox.ZIndex = ZIndex
        end


        -- Functions
        do
            function Textbox:CONFIG_GET()
                return Textbox.Value
            end

            function Textbox:CONFIG_SET(String)
                Textbox.Box.Text = String
                Textbox.Value = String
                Textbox.Callback(String)
            end
        end


        -- Connections
        do
            Textbox.Box.Focused:Connect(function()
                Textbox.Box.TextColor3 = Theme.Accent
                Textbox.OldValue = Textbox.Box.Text
            end)

            Textbox.Box.FocusLost:Connect(function(Submitted)
                Textbox.Box.TextColor3 = NewRGB(255, 255, 255)

                if Submitted then
                    local String = Textbox.Box.Text

                    Textbox.Value = String
                    Textbox.Callback(String)
                else
                    Textbox.Box.Text = Textbox.OldValue
                end
            end)
        end

        Section.Offset = Section.Offset + 26
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Textbox

        return Textbox
    end

    function Menu:CreateButton(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Name = Parameters.Name or "button"
        local Confirm = Parameters.Confirm or false
        local Callback = Parameters.Callback or function() end

        local Button = {
            Confirmable = false,
            Task = nil,

            Callback = Callback,

            ZIndex = Section.ZIndex
        }


        -- Rendering
        do
            local ZIndex = Button.ZIndex

            local Framework = Draw:Frame({
                Parent = Section.ContentHolder,
                Position = NewUDim2(0, 0, 0, Section.Offset),
                Size = NewUDim2(1, 0, 0, 20),
                BackgroundTransparency = 1,
                BorderSizePixel = 0,
                ZIndex = ZIndex,
                Visible = true
            })

            local TextButton = Draw:TextButton({
                Parent = Framework,
                Position = NewUDim2(0, 15, 0, 1),
                Size = NewUDim2(1, -30, 1, -2),
                TextColor3 = NewRGB(255, 255, 255),
                BackgroundColor3 = Theme.C,
                BorderColor3 = Theme.D,
                Text = Name,
                ZIndex = ZIndex,
                Visible = true
            }) ZIndex = ZIndex + 1

            Button.TextButton = TextButton

            Button.ZIndex = ZIndex
        end


        -- Functions
        do
            function Button:CONFIG_SET()
            end

            function Button:CONFIG_GET()
            end
        end


        -- Input & Connections
        do
            Button.TextButton.MouseButton1Down:Connect(function()
                if Confirm then
                    if Button.Confirmable then
                        Button.Callback()

                        Cancel(Button.Task)

                        Button.Confirmable = false
                        Button.TextButton.Text = Name
                        Button.TextButton.TextColor3 = NewRGB(255, 255, 255)
                        Button.TextButton.BackgroundColor3 = Theme.C
                    else
                        Button.Task = Spawn(function()
                            for i = 3, 0, -0.1 do
                                Button.TextButton.Text = Format("confirm? [%.1f]", i)
                                Button.TextButton.TextColor3 = Theme.Accent
                                Button.TextButton.BackgroundColor3 = Theme.A

                                Button.Confirmable = true
                                Wait(0.1)
                            end

                            Button.Confirmable = false
                            Button.TextButton.Text = Name
                            Button.TextButton.TextColor3 = NewRGB(255, 255, 255)
                            Button.TextButton.BackgroundColor3 = Theme.C
                        end)
                    end
                else
                    --Button.TextButton.TextColor3 = Theme.Accent
                    Button.TextButton.BackgroundColor3 = Theme.A
                    Button.Callback()
                    Wait(0.05)
                    --Button.TextButton.TextColor3 = NewRGB(255, 255, 255)
                    Button.TextButton.BackgroundColor3 = Theme.C
                end
            end)
        end
        
        Section.Offset = Section.Offset + 24
        Menu.Elements[Parameters.Tab][Parameters.Section][Name] = Button

        return Button
    end

    -- TODO: Finish
    function Menu:CreateColorpicker(Parameters)
        local Tab = Menu.Tabs[Parameters.Tab]
        local Section = Tab.Sections[Parameters.Section]
        local Element = Menu.Elements[Parameters.Tab][Parameters.Section][Parameters.Element]
        local Color = Parameters.Color or NewRGB(255, 255, 255)
        local Transparency = Parameters.Transparency or nil
        local Callback = Parameters.Callback or function() end

        local H, S, V = ToHSV(Color)
        local IsTransparency = typeof(Transparency) == "number"

        local Colorpicker = {

        }



        return Colorpicker
    end


    -- Connections
    do
		GetPropertyChangedSignal(Workspace.CurrentCamera, "ViewportSize"):Connect(function()
			Screen = CurrentCamera.ViewportSize
		end)
		
        Menu.InputBegan[#Menu.InputBegan + 1] = function(Input)
            if Input.UserInputType == Enum.UserInputType.Keyboard and Input.KeyCode == Enum.KeyCode.Delete then
                Menu[Menu.IsOpen and "Close" or "Open"](Menu)
            end
        end

        -- Input Handler
        do
            local InputBegan = Menu.InputBegan
            local InputEnded = Menu.InputEnded
            local InputChanged = Menu.InputChanged
            
            UserInputService.InputBegan:Connect(function(Input)
                for i = 1, #InputBegan do
                    InputBegan[i](Input)
                end
            end)

            UserInputService.InputEnded:Connect(function(Input)
                for i = 1, #InputEnded do
                    InputEnded[i](Input)
                end
            end)

            UserInputService.InputChanged:Connect(function(Input)
                for i = 1, #InputChanged do
                    InputChanged[i](Input)
                end
            end)
        end
	end


    return Menu
end
